#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 resolution;

// Einstienstien - by Dave Hoskins, August 2013
// Made with Shadertoy
// No geometry rendering algorithms here, just data compression.


float col = 0.0; // Start black.
vec2 uv = vec2(0.0);

void Tri(vec4 p)
{
	vec4 unC1 = (floor(mod(p, 256.0)) / vec4(395.,395.,395.,256.));
	vec4 unC2 = (floor(p / 256.0)) / vec4(256.0);
	vec2 a = vec2(unC1.x+.18, unC2.x);
	vec2 b = vec2(unC1.y+.18, unC2.y);
	vec2 c = vec2(unC1.z+.18, unC2.z);
    vec2 as = uv-a;
	bool uv_ab = (b.x-a.x)*as.y-(b.y-a.y)*as.x > 0.0;
    if ((c.x-a.x)*as.y-(c.y-a.y)*as.x > 0.0 == uv_ab) return;
    if ((c.x-b.x)*(uv.y-b.y)-(c.y-b.y)*(uv.x-b.x) > 0.0 != uv_ab) return;
	col = mix (col, unC1.w, unC2.w); 
}

void main(void)
{
	uv = gl_FragCoord.xy / resolution.xy;
	Tri(vec4(11845., 48067.,56628., 8059.));
	Tri(vec4(43324., 21302.,10066., 15100.));
	Tri(vec4(19867., 30684.,29083., 14839.));
	Tri(vec4(52623., 38702.,17476., 13204.));
	Tri(vec4(36528., 31801.,7793., 12742.));
	Tri(vec4(22982., 32978.,22577., 13561.));
	Tri(vec4(42656., 20819.,38356., 13304.));
	Tri(vec4(20645., 11396.,51269., 15355.));
	Tri(vec4(53160., 40109.,44983., 14553.));
	Tri(vec4(37969., 51088.,33329., 15357.));
	Tri(vec4(50233., 16270.,49848., 15357.));
	Tri(vec4(29403., 31148.,23233., 13041.));
	Tri(vec4(21066., 28128.,62847., 11001.));
	Tri(vec4(56661., 37196.,20118., 15357.));
	Tri(vec4(7277., 18335.,19791., 15356.));
	Tri(vec4(30702., 34338.,40328., 14851.));
	Tri(vec4(47147., 33360.,40986., 8139.));
	Tri(vec4(26584., 59493.,55980., 15206.));
	Tri(vec4(48999., 21829.,25916., 15357.));
	Tri(vec4(42083., 25412.,28725., 15357.));
	Tri(vec4(10333., 13652.,46397., 14331.));
	Tri(vec4(24283., 62600.,27983., 8952.));
	Tri(vec4(52136., 1627.,46264., 15357.));
	Tri(vec4(55350., 8599.,61726., 15105.));
	Tri(vec4(7247., 4966.,5202., 15095.));
	Tri(vec4(18439., 19157.,18432., 15349.));
	Tri(vec4(44855., 60572.,34240., 11515.));
	Tri(vec4(49475., 53040.,52443., 14859.));
	Tri(vec4(8550., 10106.,24116., 15354.));
	Tri(vec4(31029., 8026.,13387., 15356.));
	Tri(vec4(31184., 26578.,23594., 11490.));
	Tri(vec4(61025., 32468.,1363., 7928.));
	Tri(vec4(45754., 20651.,53664., 14839.));
	Tri(vec4(39104., 20560.,57193., 15356.));
	Tri(vec4(10063., 15427.,26676., 15356.));
	Tri(vec4(26546., 41882.,39616., 15356.));
	Tri(vec4(62061., 44669.,22100., 15352.));
	Tri(vec4(29209., 27234.,18732., 15105.));
	Tri(vec4(24741., 43871.,28589., 15107.));
	Tri(vec4(31193., 8297.,57423., 8444.));
	Tri(vec4(37941., 61328.,41919., 13053.));
	Tri(vec4(18893., 35764.,46784., 14850.));
	Tri(vec4(1338., 5201.,2201., 15112.));
	Tri(vec4(44092., 55913.,37569., 15357.));
	Tri(vec4(32310., 12936.,5991., 14332.));
	Tri(vec4(48959., 56766.,55873., 14880.));
	Tri(vec4(19619., 5733.,19763., 11517.));
	Tri(vec4(40759., 23508.,57436., 8957.));
	Tri(vec4(17589., 43358.,44437., 10252.));
	Tri(vec4(37801., 34930.,50602., 9489.));
	Tri(vec4(9082., 31429.,8278., 15357.));
	Tri(vec4(22921., 42771.,30568., 9984.));
	Tri(vec4(38487., 37512.,26187., 15105.));
	Tri(vec4(34500., 26289.,9900., 15106.));
	Tri(vec4(21322., 21901.,27956., 15357.));
	Tri(vec4(56433., 53422.,51122., 15356.));
	Tri(vec4(25465., 9823.,42201., 14853.));
	Tri(vec4(18384., 38333.,12750., 15104.));
	Tri(vec4(28825., 13452.,3147., 15357.));
	Tri(vec4(42336., 18739.,18217., 15122.));
	Tri(vec4(38692., 33572.,42797., 12261.));
	Tri(vec4(34409., 38791.,32633., 15104.));
	Tri(vec4(29876., 26564.,30914., 15356.));
	Tri(vec4(51597., 48171.,33185., 12542.));
	Tri(vec4(57190., 26708.,57490., 15102.));
	Tri(vec4(59464., 62549.,59459., 15356.));
	Tri(vec4(22598., 35669.,31028., 15357.));
	Tri(vec4(42891., 44632.,41591., 15104.));
	Tri(vec4(15210., 29522.,54128., 12541.));
	Tri(vec4(39360., 43344.,39482., 15357.));
	Tri(vec4(23501., 25541.,32208., 15357.));
	Tri(vec4(27265., 35793.,56745., 8698.));
	Tri(vec4(7517., 26760.,20593., 14849.));
	Tri(vec4(18065., 57944.,46658., 15357.));
	Tri(vec4(28827., 3405.,2382., 15356.));
	Tri(vec4(62783., 14391.,19456., 15104.));
	Tri(vec4(35689., 29605.,21363., 15101.));
	Tri(vec4(18581., 26212.,24383., 15357.));
	Tri(vec4(7168., 8681.,5394., 15104.));
	Tri(vec4(16016., 43678.,44419., 15357.));
	Tri(vec4(26453., 54372.,27744., 15356.));
	Tri(vec4(28240., 31571.,18315., 15357.));
	Tri(vec4(37181., 48781.,40508., 15357.));
	Tri(vec4(33487., 24275.,24003., 15357.));
	Tri(vec4(61008., 54029.,59885., 15105.));
	Tri(vec4(52113., 45224.,54183., 12857.));
	Tri(vec4(62841., 43322.,43683., 15101.));
	Tri(vec4(56371., 52112.,60798., 14850.));
	Tri(vec4(10577., 20300.,20288., 15356.));
	Tri(vec4(42523., 50523.,61816., 10716.));
	Tri(vec4(17306., 8050.,46730., 15357.));
	Tri(vec4(19229., 62292.,59203., 7774.));


	gl_FragColor = vec4(vec3(col), 1.0 );
}

